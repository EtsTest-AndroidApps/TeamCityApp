/*
 * Copyright 2016 Andrey Tolpeev
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply from: 'jacoco.gradle'
apply from: 'spoon.gradle'
apply from: 'pmd.gradle'
apply from: 'findbugs.gradle'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.github.vase4kin.teamcityapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            minifyEnabled true
        }
        debug {
            testCoverageEnabled true
            applicationIdSuffix = ".debug"
        }
        showcase.initWith(buildTypes.release)
        showcase {
            applicationIdSuffix = ".showcase"
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
        if (variant.buildType.name.equals('showcase')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        //https://code.google.com/p/android/issues/detail?id=195331
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }

    testOptions {
        unitTests {
            all {
                jvmArgs '-noverify'
                testLogging {
                    events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                }
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        xmlReport false
        abortOnError true
        htmlOutput file("build/reports/lint-report/lint-report.html")
    }

    dexOptions {
        jumboMode true
    }
}

buildscript {
    repositories {
        mavenCentral() // or jCenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.1.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories{

    mavenCentral()

    flatDir{
        dirs 'libs'
    }

    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v13:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    // Api third party libraries
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    // Drawer
    implementation('com.mikepenz:materialdrawer:5.9.5@aar') {
        transitive = true
    }
    // Icons
    implementation 'com.joanzapata.iconify:android-iconify-material:2.2.2'
    implementation 'com.joanzapata.iconify:android-iconify-fontawesome:2.2.2'
    implementation 'com.joanzapata.iconify:android-iconify-material-community:2.2.2'
    // Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    // Views
    implementation 'tr.xip.errorview:library:3.0.0'
    // View injection
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    // Event bus
    implementation 'org.greenrobot:eventbus:3.0.0'
    // Others
    implementation 'joda-time:joda-time:2.8.1'
    implementation 'com.bignerdranch.android:recyclerview-multiselect:0.2'
    implementation 'com.vinaysshenoy:mugen:1.0.2'
    implementation('com.mikepenz:aboutlibraries:5.9.7@aar') {
        transitive = true
    }
    implementation 'io.supercharge:shimmerlayout:2.1.0'
    implementation 'com.github.daniel-stoneuk:material-about-library:2.2.5'
    // Onboarding
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.7.0'
    // Dagger
    compile 'com.google.dagger:dagger:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    // Rx
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.8'
    // Rx cache
    implementation "com.github.VictorAlbertos.RxCache:runtime:1.7.0-1.x"
    implementation 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
    // Encryption
    implementation 'com.facebook.conceal:conceal:1.1.3@aar'
    // Firebase
    implementation 'com.google.firebase:firebase-core:12.0.1'
    // Unit tests
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoCoreVersion"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-junit:2.0.0.0'
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$rootProject.powerMockVersion"
    // Ui tests
    androidTestImplementation "com.android.support.test:runner:$rootProject.espressoRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.espressoRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-web:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoCoreVersion"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker:$rootProject.dexMakerVersion"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-dx:$rootProject.dexMakerVersion"
    androidTestImplementation "com.crittercism.dexmaker:dexmaker-mockito:$rootProject.dexMakerVersion"
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
    androidTestImplementation 'com.jraska:falcon-spoon-compat:1.0.4'
    androidTestImplementation 'com.github.fabioCollini:DaggerMock:0.7.0'
    androidTestImplementation 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'
    // Resolve conflits between apks
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:design:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }
}

apply plugin: 'com.google.gms.google-services'
